{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/ga.js","webpack:///./src/components/formatted-date.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","disqus_react__WEBPACK_IMPORTED_MODULE_1__","disqus_react__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_ga__WEBPACK_IMPORTED_MODULE_4__","_components_formatted_date__WEBPACK_IMPORTED_MODULE_5__","Post","_ref","data","siteTitle","site","siteMetadata","title","post","markdownRemark","frontmatter","disqusConfig","url","path","identifier","a","createElement","subtitle","keywords","dangerouslySetInnerHTML","__html","html","style","marginTop","marginBottom","fontSize","color","author","dateString","date","DiscussionEmbed","shortname","config","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","name","content","property","concat","length","join","defaultProps","arrayOf","GA","useEffect","trySending","window","gtag","setTimeout","console","log","page_title","document","page_path","Fragment","moment__WEBPACK_IMPORTED_MODULE_1__","memo","moment","locale","format","Header","siteDescription","react_default","background","margin","maxWidth","padding","fontWeight","opacity","borderTop","borderRight","Layout","gatsby_browser_entry","header","minHeight","paddingTop","display","className","href","Date","getFullYear","_2363664672","node"],"mappings":"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","file":"component---src-templates-post-js-b4dee009e0e53c77b299.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Disqus from 'disqus-react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport GA from '../components/ga';\nimport FormattedDate from '../components/formatted-date';\n\nimport 'prismjs/themes/prism.css'\nimport './post.css'\n\nfunction Post({ data }) {\n  const siteTitle = data.site.siteMetadata.title;\n  const post = data.markdownRemark;\n  const frontmatter = post.frontmatter;\n\n  const disqusConfig = {\n    url: 'https://dingtalk-dev.github.io' + frontmatter.path,\n    identifier: frontmatter.path,\n    title: frontmatter.title,\n  };\n\n  return (\n    <Layout title={frontmatter.title} subtitle={siteTitle}>\n      <GA />\n      <SEO title={frontmatter.title} keywords={[`developer`, `blog`, `alibaba`, `dingtalk`, `ios`, `mac`]} />\n      <article dangerouslySetInnerHTML={{ __html: post.html }} />\n      <div style={{ marginTop: '1rem', marginBottom: '1rem', fontSize: '0.8rem', color: '#aaa' }}>\n        由 {frontmatter.author} 发布于 <FormattedDate dateString={frontmatter.date} />\n      </div>\n      <Disqus.DiscussionEmbed shortname=\"dingtalk-dev\" config={disqusConfig} />\n    </Layout>\n  );\n}\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query($postId: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $postId }) {\n      html,\n      frontmatter {\n        title,\n        date,\n        author,\n        path\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={(title ? (title + ' | ') : '') + site.siteMetadata.title}\n      link={[\n        // Font CDNs here...\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useEffect } from 'react';\n\nfunction GA() {\n  useEffect(() => {\n    function trySending() {\n      if (!window.gtag) {\n        // gtag is not ready, try again later.\n        setTimeout(() => {\n          trySending();\n        }, 5000);\n      }\n\n      console.log('will send ga track...');\n      window.gtag('config', 'UA-137161770-1', {\n        'page_title': window.document.title,\n        'page_path': window.location.pathname\n      });\n    }\n\n    trySending();\n  }, []);\n\n  return <React.Fragment />;\n}\n\nexport default GA;","import React from 'react';\nimport * as moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nfunction FormattedDate({ dateString }) {\n  return <span>{moment(dateString, 'YYYY-MM-DD').locale('zh-cn').format('LL')}</span>;\n}\n\nexport default React.memo(FormattedDate);","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <header\n    style={{\n      background: `linear-gradient(to right, rgb(50, 150, 250), rgb(21, 119, 218))`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 720,\n        padding: `1.45rem 1.0875rem 0.5rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, marginTop: '3rem', color: '#fff' }}>\n        {siteTitle}\n      </h1>\n      <h2 style={{ color: '#fff', fontSize: '1rem', fontWeight: 400, opacity: 0.6, margin: '0.8rem 0 0 0' }}>\n        {siteDescription}\n      </h2>\n    </div>\n    <div style={{ borderTop: 'calc(3vw + 30px) solid transparent', borderRight: '100vw solid #fff' }} />\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ title, subtitle, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={title || data.site.siteMetadata.title}\n          siteDescription={subtitle || data.site.siteMetadata.description} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 720,\n            minHeight: 'calc(100vh - 20.3rem)',\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main style={{ padding: '3rem 0' }}>{children}</main>\n        </div>\n        <footer>\n          <div style={{ maxWidth: '720px', margin: '0 auto', padding: '2.8rem 1.45rem' }}>\n            <div style={{ display: 'flex' }}>\n              <div className=\"footer-col\">\n                <h1 style={{ fontSize: '1rem', margin: '0 0 0.7rem 0' }}>公司</h1>\n                <a href=\"https://dingtalk.com\">官网首页</a>\n                <a href=\"https://tms.dingtalk.com/markets/dingtalk/download\">产品下载</a>\n                <a href=\"https://im.dingtalk.com\">钉钉网页版</a>\n                <a href=\"https://job.alibaba.com/zhaopin/positionList.htm?spm=a3140.8736650.2231772.14.7f153a1aMgRYNR&keyWord=JXU5NDg5JXU5NDg5&_input_charset=UTF-8\">工作机会</a>\n              </div>\n              <div className=\"footer-col\">\n                <h1 style={{ fontSize: '1rem', margin: '0 0 0.7rem 0' }}>团队</h1>\n                <a href=\"/\">博客</a>\n                <a href=\"https://github.com/dingtalk-dev\">GitHub</a>\n              </div>\n            </div>\n            <p style={{ color: '#7f8186', margin: 0 }}>\n              © {new Date().getFullYear()}, Built with ❤️ by\n              {` `}\n              <a href=\"https://dingtalk.com\">DingTalk</a> Team\n            </p>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}