{"version":3,"sources":["webpack:///./src/components/post-item.js","webpack:///./src/templates/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/ga.js","webpack:///./src/components/formatted-date.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostItem","_ref","title","date","path","author","body","react_default","a","createElement","className","gatsby_browser_entry","to","formatted_date","dateString","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","React","memo","posts","data","allMarkdownRemark","nodes","map","n","frontmatter","excerpt","layout","ga","seo","keywords","p","components_post_item","key","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","name","content","property","concat","length","join","defaultProps","arrayOf","GA","useEffect","trySending","window","gtag","setTimeout","console","log","page_title","document","page_path","Fragment","moment__WEBPACK_IMPORTED_MODULE_1__","moment","locale","format","Header","siteTitle","siteDescription","style","background","marginBottom","margin","maxWidth","padding","marginTop","color","fontSize","fontWeight","opacity","borderTop","borderRight","Layout","subtitle","header","minHeight","paddingTop","display","href","Date","getFullYear","_2363664672","node"],"mappings":"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","file":"component---src-templates-index-js-1e2cd043b8b6d6bdb6f1.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport FormattedDate from './formatted-date';\nimport './post-item.css';\n\nfunction PostItem({ title, date, path, author, body }) {\n  return (\n    <div className=\"post-item\">\n      <h1><Link to={path}>{title}</Link></h1>\n      <FormattedDate dateString={date} />\n      <span>・</span>\n      <span>{author}</span>\n      <p>{body}</p>\n    </div>\n  );\n}\n\nexport default PostItem;","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport GA from '../components/ga';\nimport PostItem from '../components/post-item';\n\nconst IndexPage = React.memo(({ data }) => {\n  const posts = data.allMarkdownRemark.nodes.map(n => (\n    {\n      title: n.frontmatter.title,\n      date: n.frontmatter.date,\n      path: n.frontmatter.path,\n      author: n.frontmatter.author,\n      body: n.excerpt,\n    }\n  ));\n\n  return (\n    <Layout>\n      <GA />\n      <SEO title=\"\" keywords={[`developer`, `blog`, `alibaba`, `dingtalk`, `ios`, `mac`]} />\n      <div>\n        {posts.map(p => (\n          <PostItem\n            key={p.path}\n            title={p.title}\n            date={p.date}\n            path={p.path}\n            author={p.author}\n            body={p.body} />\n        ))}\n      </div>\n    </Layout>\n  );\n})\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date] }) {\n      nodes {\n        frontmatter {\n          title,\n          path,\n          date,\n          author\n        }\n        excerpt(truncate: true)\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={(title ? (title + ' | ') : '') + site.siteMetadata.title}\n      link={[\n        // Font CDNs here...\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useEffect } from 'react';\n\nfunction GA() {\n  useEffect(() => {\n    function trySending() {\n      if (!window.gtag) {\n        // gtag is not ready, try again later.\n        setTimeout(() => {\n          trySending();\n        }, 5000);\n      }\n\n      console.log('will send ga track...');\n      window.gtag('config', 'UA-137161770-1', {\n        'page_title': window.document.title,\n        'page_path': window.location.pathname\n      });\n    }\n\n    trySending();\n  }, []);\n\n  return <React.Fragment />;\n}\n\nexport default GA;","import React from 'react';\nimport * as moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nfunction FormattedDate({ dateString }) {\n  return <span>{moment(dateString, 'YYYY-MM-DD').locale('zh-cn').format('LL')}</span>;\n}\n\nexport default React.memo(FormattedDate);","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <header\n    style={{\n      background: `linear-gradient(to right, rgb(50, 150, 250), rgb(21, 119, 218))`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 720,\n        padding: `1.45rem 1.0875rem 0.5rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, marginTop: '3rem', color: '#fff' }}>\n        {siteTitle}\n      </h1>\n      <h2 style={{ color: '#fff', fontSize: '1rem', fontWeight: 400, opacity: 0.6, margin: '0.8rem 0 0 0' }}>\n        {siteDescription}\n      </h2>\n    </div>\n    <div style={{ borderTop: 'calc(3vw + 30px) solid transparent', borderRight: '100vw solid #fff' }} />\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ title, subtitle, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={title || data.site.siteMetadata.title}\n          siteDescription={subtitle || data.site.siteMetadata.description} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 720,\n            minHeight: 'calc(100vh - 20.3rem)',\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main style={{ padding: '3rem 0' }}>{children}</main>\n        </div>\n        <footer>\n          <div style={{ maxWidth: '720px', margin: '0 auto', padding: '2.8rem 1.45rem' }}>\n            <div style={{ display: 'flex' }}>\n              <div className=\"footer-col\">\n                <h1 style={{ fontSize: '1rem', margin: '0 0 0.7rem 0' }}>公司</h1>\n                <a href=\"https://dingtalk.com\">官网首页</a>\n                <a href=\"https://tms.dingtalk.com/markets/dingtalk/download\">产品下载</a>\n                <a href=\"https://im.dingtalk.com\">钉钉网页版</a>\n                <a href=\"https://job.alibaba.com/zhaopin/positionList.htm?spm=a3140.8736650.2231772.14.7f153a1aMgRYNR&keyWord=JXU5NDg5JXU5NDg5&_input_charset=UTF-8\">工作机会</a>\n              </div>\n              <div className=\"footer-col\">\n                <h1 style={{ fontSize: '1rem', margin: '0 0 0.7rem 0' }}>团队</h1>\n                <a href=\"/\">博客</a>\n                <a href=\"https://github.com/dingtalk-dev\">GitHub</a>\n              </div>\n            </div>\n            <p style={{ color: '#7f8186', margin: 0 }}>\n              © {new Date().getFullYear()}, Built with ❤️ by\n              {` `}\n              <a href=\"https://dingtalk.com\">DingTalk</a> Team\n            </p>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}